@model MBLabs.LGClubeWebBackendLib.Transfer.MenuCategory

@using MBLabs.LGClubeWebBackendLib.Enumerator
@using GridMvc.Html
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "Clube LG";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts {
    <script>
        $('.chk-selectall').on('click', function () {
            var wasSelected = $(".chk-selectall:checked").length == 1;
            var ulListClass = $(".chk-selectall").attr('ul-list-class');
            $("." + ulListClass + " input[type=\'checkbox\']").prop('checked', wasSelected);
        });

        $.ajax({
            url: baseUrl + '/api/usermobile/getByCompanyGroupId?companyGroupId=' + selectedGroup,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                $.each(data.ReturnData, function (index, value) {
                    $('.div-SelectAll').css('display', 'block');
                    $('.ul-companylist').append('<li class=\'col-sm-6\' style=\'padding:20px 0 20px 0;\'><div class=\'checkbox\'><lable><input type=\'checkbox\' class=\'userNameCheckbox\' name=\'UserMobileList[]\' id=\'' + value.Id + '\' value=\'' + value.Id + '\' /><span class=\'checkbox-material\'><span class=\'check\'></span></span><label class=\'userNameAndGroupLable\' for=\'' + value.Id + '\' class=\'pointerLable no-margin-bottom\' >' + value.Name + ' ' + '<span style=\'display: block; color:#BDBDBD;\'>' + value.CompanyGroup.Name + '</span>' + '</label></label></div></li>');
                });
            }
        }).done(function () {
            /*after the ul is filled or not with users, this shows an empty state message if it is the case, and unblocks the UI*/
            if ($('.ul-companylist li').length == 0) {
                $('.ul-companylist').append('<lable class=\'col-sm-6 noUserFoundlable\'>Nenhum usuário encontrado</lable>');
                $('.div-SelectAll').css('display', 'none');
            }

            $.unblockUI();
        });
    </script>
}

<style>
    .datepicker {
        text-indent: 9px;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-8 col-md-push-2 col-sm-8 col-sm-push-2">
            <div class="portlet">
                <h2 class="portlet-title">
                    <u>Cadastro >> Categoria</u>
                </h2>

                <div class="portlet-body">

                    <form id="submit" data-validate="parsley" method="POST" class="form parsley-form" enctype="multipart/form-data" autocomplete="off">

                        <fieldset>
                            <legend><i class="fa fa-male"></i>&nbsp&nbsp Informação do Cliente</legend>

                            @Html.HiddenFor(m => m.Id)
                            @Html.HiddenFor(m => m.DtInsert)
                            @Html.HiddenFor(m => m.DtUpdate)
                            @Html.HiddenFor(m => m.IsActive)
                            @Html.HiddenFor(m => m.InsertByUserId)
                            @Html.HiddenFor(m => m.UpdateByUserId)
                            @Html.HiddenFor(m => m.PhotoPath)

                            <input style="display: none">
                            <input type="password" style="display: none">


                            @if ((SelectList)ViewData["MenuCategoryList"] != null)
                            {
                                <div class="form-group">
                                    <label class="lbl-name">Categoria Pai</label>
                                    @Html.DropDownListFor(m => m.FatherMenuCategoryId, (SelectList)ViewData["MenuCategoryList"], String.Format("-- {0} --", "Selecionar"), new { @class = "form-control ddl-profiletype" })
                                </div>
                            }

                            <div class="form-group">
                                <label>Nome (*)</label>
                                @Html.TextBoxFor(m => m.Name, new { data_required = "true", @class = "form-control parsley-validated" })
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">Descrição (*)</label>
                                @Html.TextAreaFor(m => m.Description, new { data_required = "true", @class = "form-control parsley-validated" })
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">Imagem</label>
                                @{var hadPhotoPath = !String.IsNullOrEmpty(Model.PhotoPath) ? true : false; }
                                @if (hadPhotoPath)
                                { <img class="viewPhotoPath" src='@Model.PhotoPath' style='height: 80px;' />  }
                                <input type="file" name="contentFile" class="form-control" />
                            </div>
                        </fieldset>
                        <br />
                        <div class="form-group">
                            <input type="submit" class="btn btn-primary blockButton" value="Salvar" />
                            <a href="@System.Web.HttpContext.Current.Request.UrlReferrer" type="submit" class="btn btn-default">Voltar</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
