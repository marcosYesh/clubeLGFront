@model MBLabs.LGClubeWebBackendLib.Transfer.ProductVideo

@using MBLabs.LGClubeWebBackendLib.Enumerator
@using GridMvc.Html
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "Clube LG";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts {
    <script>
        var model = @Html.Raw(Json.Encode(Model));
        var selectedValue = '';
        if(model != null && model.VideoSourceType != null) {
            var selectedValue = model.VideoSourceType == 1 ? 'MANUAL' : 'YOUTUBE';
        } else {
            selectedValue = 'MANUAL';
        }
        changeVideoSourceTypeCss(selectedValue);

        function changeVideoSourceTypeCss(selectedValue){
            if(selectedValue != '') {
                if (selectedValue == 'YOUTUBE') {
                    $('.div-youtubeurl').css('display', 'block');
                    $('.div-manualurl').css('display', 'none');
                } else {
                    $('.div-youtubeurl').css('display', 'none');
                    $('.div-manualurl').css('display', 'block');
                }
            }
        }

        $('.ddl-videosourcetype').change(function () {
            var selectedValue = $('.ddl-videosourcetype option:selected').val();
            changeVideoSourceTypeCss(selectedValue);
        });
    </script>
}

<style>
    .datepicker {
        text-indent: 9px;
    }

    }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-8 col-md-push-2 col-sm-8 col-sm-push-2">
            <div class="portlet">
                <h2 class="portlet-title">
                    <u>Cadastro >> Vídeo</u>
                </h2>

                <div class="portlet-body">

                    <form id="submit" data-validate="parsley" method="POST" class="form parsley-form" enctype="multipart/form-data" autocomplete="off">

                        <fieldset>
                            <legend><i class="fa fa-male"></i>&nbsp&nbsp INFORMAÇÃO DO VÍDEO</legend>

                            @Html.HiddenFor(m => m.Id)
                            @Html.HiddenFor(m => m.DtInsert)
                            @Html.HiddenFor(m => m.DtUpdate)
                            @Html.HiddenFor(m => m.IsActive)
                            @Html.HiddenFor(m => m.InsertByUserId)
                            @Html.HiddenFor(m => m.UpdateByUserId)
                            @Html.HiddenFor(m => m.ProductId)
                            @Html.HiddenFor(m => m.VideoPath)

                            <div class="form-group">
                                <label>Formato do vídeo (*)</label>
                                @Html.DropDownListFor(m => m.VideoSourceType, (SelectList)ViewData["VideoSourceTypeList"], new { @class = "form-control ddl-videosourcetype" })
                            </div>

                            <div class="form-group div-youtubeurl">
                                <label>Youtube URL (*)</label>
                                @Html.TextBoxFor(m => m.YoutubeURL, new { @class = "form-control parsley-validated", maxlength = "200" })
                            </div>

                            <div class="form-group div-manualurl">
                                <label class="lbl-name">Vídeo (*)</label>
                                @{var hadPhotoPath = !String.IsNullOrEmpty(Model.VideoPath) ? true : false; }
                                @if (hadPhotoPath)
                                { <br /><a href="@Model.VideoPath"><video src="@Model.VideoPath" style="width: 80px;" /></a> }
                                <input type="file" name="contentFile" class="form-control" />
                            </div>

                            <div class="form-group">
                                <label>TÍtulo (*)</label>
                                @Html.TextBoxFor(m => m.Title, new { data_required = "true", @class = "form-control parsley-validated", maxlength = "100" })
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">Conteúdo (*)</label>
                                @Html.TextAreaFor(m => m.Content, new { data_required = "true", @class = "form-control parsley-validated", rows = 5, maxlength = "1000" })
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">Prêmio (*)</label>
                                @Html.TextBoxFor(m => m.Prize, new { data_required = "true", @class = "form-control parsley-validated money" })
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">Quantide mínima de acertos (%)</label>
                                @Html.TextBoxFor(m => m.MinCorrectAnswer, new { @class = "form-control", type = "number" })
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">Ordem (*)</label>
                                @Html.TextBoxFor(m => m.Order, new { @class = "form-control", type = "number" })
                            </div>

                            <div class="form-group">
                                <label>Com Áudio? (*)</label>
                                @Html.DropDownListFor(m => m.AudioType, (SelectList)ViewData["AudioTypeList"], new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                <label>Destaque? (*)</label><br />
                                @Html.CheckBoxFor(m => m.IsFeatured)
                            </div>
                        </fieldset>
                        <br />
                        <div class="form-group">
                            <input type="submit" class="btn btn-primary blockButton" value="Salvar" />
                            <a href="@System.Web.HttpContext.Current.Request.UrlReferrer" type="submit" class="btn btn-default">Voltar</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>