@model MBLabs.LGClubeWebBackendLib.Transfer.Product

@using MBLabs.LGClubeWebBackendLib.Enumerator
@using GridMvc.Html
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "Clube LG";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section scripts {
}

<style>
    .datepicker {
        text-indent: 9px;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col-md-8 col-md-push-2 col-sm-8 col-sm-push-2">
            <div class="portlet">
                <h2 class="portlet-title">
                    <u>Cadastro >> Produto</u>
                </h2>

                <div class="portlet-body">

                    <form id="submit" data-validate="parsley" method="POST" class="form parsley-form" enctype="multipart/form-data" autocomplete="off">

                        <fieldset>
                            <legend><i class="fa fa-male"></i>&nbsp&nbsp INFORMAÇÃO DO PRODUTO</legend>

                            @Html.HiddenFor(m => m.Id)
                            @Html.HiddenFor(m => m.DtInsert)
                            @Html.HiddenFor(m => m.DtUpdate)
                            @Html.HiddenFor(m => m.IsActive)
                            @Html.HiddenFor(m => m.InsertByUserId)
                            @Html.HiddenFor(m => m.UpdateByUserId)
                            @Html.HiddenFor(m => m.PhotoPath)

                            <input style="display: none">
                            <input type="password" style="display: none">


                            @if ((SelectList)ViewData["MenuCategoryList"] != null)
                            {
                                <div class="form-group">
                                    <label class="lbl-name">Categoria Pai</label>
                                    @Html.DropDownListFor(m => m.FatherMenuCategoryId, (SelectList)ViewData["MenuCategoryList"], String.Format("-- {0} --", "Selecionar"), new { @class = "form-control" })
                                </div>
                            }

                            <div class="form-group">
                                <label>Nome (*)</label>
                                @Html.TextBoxFor(m => m.Name, new { data_required = "true", @class = "form-control parsley-validated" })
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">Descrição (*)</label>
                                @Html.TextAreaFor(m => m.Description, new { data_required = "true", @class = "form-control parsley-validated", @maxlength = "500" })
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">Descrição Completa (HTML)</label>
                                @Html.TextAreaFor(m => m.FullDescription, new { @class = "form-control", rows = 10 })
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">Imagem</label>
                                @{var hadPhotoPath = !String.IsNullOrEmpty(Model.PhotoPath) ? true : false; }
                                @if (hadPhotoPath)
                                { <img class="viewPhotoPath" src='@Model.PhotoPath' style='height: 80px;' />  }
                                <input type="file" name="contentFile" class="form-control" />
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">PDF</label>
                                @{var hadPDFPath = !String.IsNullOrEmpty(Model.PDFPath) ? true : false; }
                                @if (hadPDFPath)
                                { <a href='@Model.PDFPath'>(Realizar Download)</a>  }
                                <input type="file" name="contentPdfFile" class="form-control" />
                            </div>

                            <div class="form-group">
                                <label>Destaque?</label><br />
                                @Html.CheckBoxFor(m => m.IsFeatured)
                            </div>

                            <div class="form-group">
                                <label>Lançamento?</label><br />
                                @Html.CheckBoxFor(m => m.IsLaunch)
                            </div>

                            <div class="form-group">
                                <label class="lbl-name">Canais com permissão (*)</label>
                                @{
                                    <div class="div-SelectAll checkbox" style="display:none;">
                                        <label>
                                            <input type="checkbox" class="chk-selectall" name="SelectAllChk" id="SelectAll" ul-list-class="ul-companylist" data-parsley-required="true" />
                                            <span class="chk-span">Selecionar Todos</span>
                                        </label>
                                    </div>
                                    <ul class="list-unstyled unstyled ul-companylist col-sm-12">
                                        @for (int i = 0; i < ((SelectList)ViewData["PermissionList"]).Count(); i++)
                                        {
                                            SelectListItem index = ((SelectList)ViewData["PermissionList"]).ToArray()[i];
                                            Boolean found = Model.ProductPermissionList.Any(x => x.ChannelId.ToString() == index.Value);

                                            <li class="col-sm-6">
                                                
                                                @if (found)
                                                {
                                                    <input type="checkbox" name="ProductPermissionList[]" value="@index.Value" checked="checked" />
                                                }
                                                else
                                                {
                                                    <input type="checkbox" name="ProductPermissionList[]" value="@index.Value" />
                                                }
                                                <label>@index.Text</label>
                                            </li>
                                        }
                                    </ul>
                                }
                            </div>

                        </fieldset>
                        <br />
                        <div class="form-group">
                            <input type="submit" class="btn btn-primary blockButton" value="Salvar" />
                            <a href="@System.Web.HttpContext.Current.Request.UrlReferrer" type="submit" class="btn btn-default">Voltar</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>